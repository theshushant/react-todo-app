{"ast":null,"code":"var _jsxFileName = \"/home/shushant/Documents/React/my-app/src/App.js\";\nimport React from 'react';\nimport './App.css'; // class TextWithCheck extends React.Component {\n//\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             txt: this.props.txt\n//         }\n//\n//         this.update = this.update.bind(this);\n//     }\n//\n//     update(e) {\n//         this.setState({\n//             txt: e.target.value,\n//         });\n//     }\n//\n//     render() {\n//         return (\n//             <div className=\"textWithCheck\">\n//                 <input type=\"checkbox\"></input>\n//\n//                 <input type=\"text\" value={this.state.txt} onChange={this.update}></input>\n//                 <h1>{this.state.txt}</h1>\n//             </div>);\n//     }\n// }\n//\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.isCheck = todo => {\n      if (this.state.todos.indexOf(todo) !== -1) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.state = {\n      todos: [{\n        id: 1,\n        title: \"let it be x\"\n      }, {\n        id: 2,\n        title: \"let it be y\"\n      }]\n    };\n    this.deleteTodo = this.deleteTodo.bind(this);\n  }\n\n  addTodo(e) {\n    let inputValue = e;\n    this.setState((prevState, props) => {\n      return {\n        todos: [...prevState.todos, {\n          id: prevState.todos.length > 0 ? prevState.todos[prevState.todos.length - 1].id + 1 : 1,\n          title: inputValue\n        }]\n      };\n    });\n  }\n\n  deleteTodo(index) {\n    this.setState((prevState, props) => {\n      let newTodos = prevState.todos;\n      newTodos.splice(index, 1);\n      console.log(\"csc\");\n      return {\n        todos: newTodos\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(TitleField, {\n      addTodo: this.addTodo.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), this.state.todos.map((todo, index) => React.createElement(\"div\", {\n      key: todo.id.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TextWithCheck, {\n      todo: todo,\n      deleteTodo: () => {\n        this.deleteTodo(index);\n      },\n      isCheck: this.isCheck(todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))));\n  }\n\n} //\n// function NumberList(props) {\n//     const numb = props.numb;\n//\n//     const listItems = numb.map((k, n) =>\n//         <li key={k}>\n//             <TextWithCheck children={n}/>\n//         </li>\n//     );\n//\n//     return (\n//         <ul>{listItems}</ul>\n//     );\n// }\n\n\nclass TitleField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearField = () => {\n      console.log('dfghj');\n      this.setState({\n        txt: \"\"\n      });\n    };\n\n    this.state = {\n      txt: ''\n    };\n  }\n\n  update(e) {\n    this.setState({\n      txt: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter the Title for your Todo\",\n      value: this.state.txt,\n      onChange: this.update.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Button, {\n      actionPerform: () => {\n        this.props.addTodo(this.state.txt);\n        this.clearField();\n      },\n      text: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}\n\nvar TextWithCheck = props => React.createElement(\"div\", {\n  className: \"textWithCheck\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 166\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  className: \"check\",\n  type: \"checkbox\",\n  value: props.isCheck,\n  onChange: props.addCheck,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 168\n  },\n  __self: this\n}, props.todo.title), React.createElement(Button, {\n  actionPerform: props.deleteTodo,\n  text: \"delete\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 169\n  },\n  __self: this\n}));\n\nvar Button = props => React.createElement(\"button\", {\n  onClick: props.actionPerform,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}, props.text); // function Button(props) {\n//\n//     return <div className=\"buttonType\">\n//         <button onChange={this.props.val}>\n//             add\n//         </button>\n//     </div>;\n// }\n\n\nvar Header = React.createElement(\"header\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185\n  },\n  __self: this\n});\nexport default App;","map":{"version":3,"sources":["/home/shushant/Documents/React/my-app/src/App.js"],"names":["React","App","Component","constructor","isCheck","todo","state","todos","indexOf","id","title","deleteTodo","bind","addTodo","e","inputValue","setState","prevState","props","length","index","newTodos","splice","console","log","render","map","toString","TitleField","clearField","txt","update","target","value","TextWithCheck","addCheck","Button","actionPerform","text","Header"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAkDdC,OAlDc,GAkDHC,IAAD,IAAU;AAChB,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyBH,IAAzB,MAAmC,CAAC,CAAxC,EAA2C;AACvC,eAAO,IAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ,KAxDa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CACH;AACIE,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADG,EAMH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE;AAFX,OANG;AADE,KAAb;AAiBA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AAEH;;AAGDC,EAAAA,OAAO,CAACC,CAAD,EAAI;AACP,QAAIC,UAAU,GAAGD,CAAjB;AACA,SAAKE,QAAL,CAAc,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAChC,aAAO;AACHX,QAAAA,KAAK,EAAE,CAAC,GAAGU,SAAS,CAACV,KAAd,EAAqB;AACxBE,UAAAA,EAAE,EAAEQ,SAAS,CAACV,KAAV,CAAgBY,MAAhB,GAAyB,CAAzB,GAA6BF,SAAS,CAACV,KAAV,CAAgBU,SAAS,CAACV,KAAV,CAAgBY,MAAhB,GAAyB,CAAzC,EAA4CV,EAA5C,GAAiD,CAA9E,GAAkF,CAD9D;AAExBC,UAAAA,KAAK,EAAEK;AAFiB,SAArB;AADJ,OAAP;AAOH,KARD;AASH;;AAEDJ,EAAAA,UAAU,CAACS,KAAD,EAAQ;AACd,SAAKJ,QAAL,CAAc,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC5B,UAAIG,QAAQ,GAAGJ,SAAS,CAACV,KAAzB;AAEAc,MAAAA,QAAQ,CAACC,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,aAAO;AAACjB,QAAAA,KAAK,EAAEc;AAAR,OAAP;AAEH,KARL;AAUH;;AAUDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKZ,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKN,KAAL,CAAWC,KAAX,CAAiBmB,GAAjB,CAAqB,CAACrB,IAAD,EAAOe,KAAP,KAClB;AAAK,MAAA,GAAG,EAAEf,IAAI,CAACI,EAAL,CAAQkB,QAAR,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEtB,IAArB;AAA2B,MAAA,UAAU,EAAE,MAAM;AACzC,aAAKM,UAAL,CAAgBS,KAAhB;AACH,OAFD;AAGe,MAAA,OAAO,EAAE,KAAKhB,OAAL,CAAaC,IAAb,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CAFL,CADJ;AAcH;;AA3E6B,C,CA8ElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMuB,UAAN,SAAyB5B,KAAK,CAACE,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACe,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBW,UATmB,GASN,MAAM;AAEfN,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEA,WAAKR,QAAL,CAAc;AACVc,QAAAA,GAAG,EAAE;AADK,OAAd;AAGH,KAhBkB;;AAEf,SAAKxB,KAAL,GAAa;AAACwB,MAAAA,GAAG,EAAE;AAAN,KAAb;AACH;;AAEDC,EAAAA,MAAM,CAACjB,CAAD,EAAI;AACN,SAAKE,QAAL,CAAc;AAACc,MAAAA,GAAG,EAAEhB,CAAC,CAACkB,MAAF,CAASC;AAAf,KAAd;AACH;;AAWDR,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEJ;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,+BAA/B;AAA+D,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWwB,GAAjF;AACO,MAAA,QAAQ,EAAE,KAAKC,MAAL,CAAYnB,IAAZ,CAAiB,IAAjB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,EAKJ,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAE,MAAM;AACzB,aAAKM,KAAL,CAAWL,OAAX,CAAmB,KAAKP,KAAL,CAAWwB,GAA9B;AACA,aAAKD,UAAL;AAEH,OAJD;AAIG,MAAA,IAAI,EAAE,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALI,CAAR;AAaH;;AAlCoC;;AAuCzC,IAAIK,aAAa,GAAIhB,KAAD,IAAW;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAC3B;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,IAAI,EAAC,UAA9B;AAAyC,EAAA,KAAK,EAAEA,KAAK,CAACd,OAAtD;AAA+D,EAAA,QAAQ,EAAEc,KAAK,CAACiB,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD2B,EAE3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKjB,KAAK,CAACb,IAAN,CAAWK,KAAhB,CAF2B,EAG3B,oBAAC,MAAD;AAAQ,EAAA,aAAa,EAAEQ,KAAK,CAACP,UAA7B;AAAyC,EAAA,IAAI,EAAE,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAH2B,CAA/B;;AAQA,IAAIyB,MAAM,GAAIlB,KAAD,IAAW;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACmB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAuCnB,KAAK,CAACoB,IAA7C,CAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IACIC,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADb;AAMA,eAAetC,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n// class TextWithCheck extends React.Component {\n//\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             txt: this.props.txt\n//         }\n//\n//         this.update = this.update.bind(this);\n//     }\n//\n//     update(e) {\n//         this.setState({\n//             txt: e.target.value,\n//         });\n//     }\n//\n//     render() {\n//         return (\n//             <div className=\"textWithCheck\">\n//                 <input type=\"checkbox\"></input>\n//\n//                 <input type=\"text\" value={this.state.txt} onChange={this.update}></input>\n//                 <h1>{this.state.txt}</h1>\n//             </div>);\n//     }\n// }\n//\n\nclass App extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            todos: [\n                {\n                    id: 1,\n                    title: \"let it be x\"\n\n                },\n                {\n                    id: 2,\n                    title: \"let it be y\"\n\n                },\n\n            ]\n\n        }\n\n        this.deleteTodo = this.deleteTodo.bind(this);\n\n    }\n\n\n    addTodo(e) {\n        let inputValue = e;\n        this.setState((prevState, props) => {\n            return {\n                todos: [...prevState.todos, {\n                    id: prevState.todos.length > 0 ? prevState.todos[prevState.todos.length - 1].id + 1 : 1,\n                    title: inputValue\n                }]\n\n            }\n        });\n    }\n\n    deleteTodo(index) {\n        this.setState((prevState, props) => {\n                let newTodos = prevState.todos;\n\n                newTodos.splice(index, 1);\n\n                console.log(\"csc\");\n                return {todos: newTodos}\n\n            }\n        );\n    }\n\n    isCheck = (todo) => {\n        if (this.state.todos.indexOf(todo) !== -1) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <TitleField addTodo={this.addTodo.bind(this)}/>\n                {this.state.todos.map((todo, index) =>\n                    <div key={todo.id.toString()}>\n                        <TextWithCheck todo={todo} deleteTodo={() => {\n                            this.deleteTodo(index)\n                        }}\n                                       isCheck={this.isCheck(todo)}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\n//\n// function NumberList(props) {\n//     const numb = props.numb;\n//\n//     const listItems = numb.map((k, n) =>\n//         <li key={k}>\n//             <TextWithCheck children={n}/>\n//         </li>\n//     );\n//\n//     return (\n//         <ul>{listItems}</ul>\n//     );\n// }\n\nclass TitleField extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {txt: ''};\n    }\n\n    update(e) {\n        this.setState({txt: e.target.value})\n    }\n\n    clearField = () => {\n\n        console.log('dfghj');\n\n        this.setState({\n            txt: \"\"\n        });\n    };\n\n    render() {\n        return (<div>\n\n            <input type=\"text\" placeholder=\"Enter the Title for your Todo\" value={this.state.txt}\n                   onChange={this.update.bind(this)}/>\n\n            <Button actionPerform={() => {\n                this.props.addTodo(this.state.txt);\n                this.clearField();\n\n            }} text={\"add\"}/>\n\n        </div>);\n\n    }\n\n}\n\n\nvar TextWithCheck = (props) => <div className=\"textWithCheck\">\n    <input className=\"check\" type=\"checkbox\" value={props.isCheck} onChange={props.addCheck}></input>\n    <h3>{props.todo.title}</h3>\n    <Button actionPerform={props.deleteTodo} text={\"delete\"}/>\n\n</div>\n\n\nvar Button = (props) => <button onClick={props.actionPerform}>{props.text}</button>\n// function Button(props) {\n//\n//     return <div className=\"buttonType\">\n//         <button onChange={this.props.val}>\n//             add\n//         </button>\n//     </div>;\n// }\n\nvar\n    Header = <header>\n\n    </header>\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}