{"ast":null,"code":"var _jsxFileName = \"/home/shushant/Documents/React/my-app/src/App.js\";\nimport React from 'react';\nimport './App.css'; // class TextWithCheck extends React.Component {\n//\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             txt: this.props.txt\n//         }\n//\n//         this.update = this.update.bind(this);\n//     }\n//\n//     update(e) {\n//         this.setState({\n//             txt: e.target.value,\n//         });\n//     }\n//\n//     render() {\n//         return (\n//             <div className=\"textWithCheck\">\n//                 <input type=\"checkbox\"></input>\n//\n//                 <input type=\"text\" value={this.state.txt} onChange={this.update}></input>\n//                 <h1>{this.state.txt}</h1>\n//             </div>);\n//     }\n// }\n//\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getTodos = () => {\n      let todos = this.state.todos;\n      const completedTodos = todos.filter(function (element) {\n        return element.completed === true;\n      });\n      const inCompletedTodos = todos.filter(function (element) {\n        return element.completed === false;\n      });\n      const returnTodo = [];\n      returnTodo.push.apply(returnTodo, inCompletedTodos);\n      returnTodo.push.apply(returnTodo, completedTodos);\n      return returnTodo;\n    };\n\n    this.isCheck = todo => {\n      if (this.state.checkList.indexOf(todo) !== -1) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.addCheck = index => {\n      console.log(\"alpha\");\n      this.setState((prevState, props) => {\n        let checks = prevState.checkList;\n        checks[index] = true;\n        return {\n          checkList: checks\n        };\n      });\n    };\n\n    this.state = {\n      todos: [{}],\n      checkList: []\n    };\n    this.deleteTodo = this.deleteTodo.bind(this);\n  }\n\n  addTodo(e) {\n    let inputValue = e;\n    this.setState((prevState, props) => {\n      return {\n        todos: [...prevState.todos, {\n          id: prevState.todos.length > 0 ? prevState.todos[prevState.todos.length - 1].id + 1 : 1,\n          title: inputValue,\n          completed: false\n        }],\n        checkList: [prevState.checkList, false]\n      };\n    });\n  }\n\n  deleteTodo(index) {\n    this.setState((prevState, props) => {\n      let newTodos = prevState.todos;\n      newTodos.splice(index, 1);\n      console.log(\"csc\");\n      return {\n        todos: newTodos\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TitleField, {\n      addTodo: this.addTodo.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), this.getTodos().map((todo, index) => React.createElement(\"div\", {\n      key: todo.id.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TextWithCheck, {\n      todo: todo,\n      deleteTodo: () => {\n        this.deleteTodo(index);\n      },\n      isCheck: this.isCheck(todo),\n      addCheck: () => this.addCheck(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))));\n  }\n\n} //\n// function NumberList(props) {\n//     const numb = props.numb;\n//\n//     const listItems = numb.map((k, n) =>\n//         <li key={k}>\n//             <TextWithCheck children={n}/>\n//         </li>\n//     );\n//\n//     return (\n//         <ul>{listItems}</ul>\n//     );\n// }\n\n\nclass TitleField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearField = () => {\n      console.log('dfghj');\n      this.setState({\n        txt: \"\"\n      });\n    };\n\n    this.state = {\n      txt: ''\n    };\n  }\n\n  update(e) {\n    this.setState({\n      txt: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter the Title for your Todo\",\n      value: this.state.txt,\n      onChange: this.update.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(Button, {\n      actionPerform: () => {\n        this.props.addTodo(this.state.txt);\n        this.clearField();\n      },\n      text: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }));\n  }\n\n}\n\nvar TextWithCheck = props => React.createElement(\"div\", {\n  className: \"textWithCheck\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  className: \"check\",\n  type: \"checkbox\",\n  value: props.isCheck,\n  onChange: props.addCheck,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189\n  },\n  __self: this\n}, props.todo.title), React.createElement(Button, {\n  actionPerform: props.deleteTodo,\n  text: \"delete\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 190\n  },\n  __self: this\n}));\n\nvar Button = props => React.createElement(\"button\", {\n  onClick: props.actionPerform,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195\n  },\n  __self: this\n}, props.text); // function Button(props) {\n//\n//     return <div className=\"buttonType\">\n//         <button onChange={this.props.val}>\n//             add\n//         </button>\n//     </div>;\n// }\n\n\nvar Header = React.createElement(\"header\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 206\n  },\n  __self: this\n});\nexport default App;","map":{"version":3,"sources":["/home/shushant/Documents/React/my-app/src/App.js"],"names":["React","App","Component","constructor","getTodos","todos","state","completedTodos","filter","element","completed","inCompletedTodos","returnTodo","push","apply","isCheck","todo","checkList","indexOf","addCheck","index","console","log","setState","prevState","props","checks","deleteTodo","bind","addTodo","e","inputValue","id","length","title","newTodos","splice","render","map","toString","TitleField","clearField","txt","update","target","value","TextWithCheck","Button","actionPerform","text","Header"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n// class TextWithCheck extends React.Component {\n//\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             txt: this.props.txt\n//         }\n//\n//         this.update = this.update.bind(this);\n//     }\n//\n//     update(e) {\n//         this.setState({\n//             txt: e.target.value,\n//         });\n//     }\n//\n//     render() {\n//         return (\n//             <div className=\"textWithCheck\">\n//                 <input type=\"checkbox\"></input>\n//\n//                 <input type=\"text\" value={this.state.txt} onChange={this.update}></input>\n//                 <h1>{this.state.txt}</h1>\n//             </div>);\n//     }\n// }\n//\n\nclass App extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            todos: [{}],\n\n            checkList: []\n\n        }\n\n        this.deleteTodo = this.deleteTodo.bind(this);\n\n    }\n\n    getTodos = () => {\n        let todos = this.state.todos;\n\n        const completedTodos = todos.filter(function (element) {\n            return element.completed === true;\n        });\n        const inCompletedTodos = todos.filter(function (element) {\n            return element.completed === false;\n        });\n        const returnTodo = [];\n        returnTodo.push.apply(returnTodo, inCompletedTodos);\n        returnTodo.push.apply(returnTodo, completedTodos);\n\n\n        return returnTodo;\n    };\n\n    addTodo(e) {\n        let inputValue = e;\n        this.setState((prevState, props) => {\n            return {\n                todos: [...prevState.todos, {\n                    id: prevState.todos.length > 0 ? prevState.todos[prevState.todos.length - 1].id + 1 : 1,\n                    title: inputValue,\n                    completed: false,\n                },\n                ],\n                checkList: [prevState.checkList, false]\n\n            }\n        });\n    }\n\n    deleteTodo(index) {\n        this.setState((prevState, props) => {\n                let newTodos = prevState.todos;\n\n                newTodos.splice(index, 1);\n\n                console.log(\"csc\");\n                return {todos: newTodos}\n\n            }\n        );\n    }\n\n    isCheck = (todo) => {\n        if (this.state.checkList.indexOf(todo) !== -1) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    addCheck = (index) => {\n        console.log(\"alpha\");\n        this.setState((prevState, props) => {\n            let checks = prevState.checkList;\n            checks[index] = true;\n            return {checkList: checks};\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <TitleField addTodo={this.addTodo.bind(this)}/>\n                {this.getTodos().map((todo, index) =>\n                    <div key={todo.id.toString()}>\n                        <TextWithCheck todo={todo} deleteTodo={() => {\n                            this.deleteTodo(index)\n                        }}\n                                       isCheck={this.isCheck(todo)}\n\n                                       addCheck={() => this.addCheck(index)}\n\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\n//\n// function NumberList(props) {\n//     const numb = props.numb;\n//\n//     const listItems = numb.map((k, n) =>\n//         <li key={k}>\n//             <TextWithCheck children={n}/>\n//         </li>\n//     );\n//\n//     return (\n//         <ul>{listItems}</ul>\n//     );\n// }\n\nclass TitleField extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {txt: ''};\n    }\n\n    update(e) {\n        this.setState({txt: e.target.value})\n    }\n\n    clearField = () => {\n\n        console.log('dfghj');\n\n        this.setState({\n            txt: \"\"\n        });\n    };\n\n    render() {\n        return (<div>\n\n            <input type=\"text\" placeholder=\"Enter the Title for your Todo\" value={this.state.txt}\n                   onChange={this.update.bind(this)}/>\n\n            <Button actionPerform={() => {\n                this.props.addTodo(this.state.txt);\n                this.clearField();\n\n            }} text={\"add\"}/>\n\n        </div>);\n\n    }\n\n}\n\n\nvar TextWithCheck = (props) => <div className=\"textWithCheck\">\n    <input className=\"check\" type=\"checkbox\" value={props.isCheck} onChange={props.addCheck}></input>\n    <h3>{props.todo.title}</h3>\n    <Button actionPerform={props.deleteTodo} text={\"delete\"}/>\n\n</div>\n\n\nvar Button = (props) => <button onClick={props.actionPerform}>{props.text}</button>\n// function Button(props) {\n//\n//     return <div className=\"buttonType\">\n//         <button onChange={this.props.val}>\n//             add\n//         </button>\n//     </div>;\n// }\n\nvar\n    Header = <header>\n\n    </header>\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}