{"ast":null,"code":"var _jsxFileName = \"/home/shushant/Documents/React/my-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getTodos = () => {\n      let todos = this.state.todos;\n      const completedTodos = todos.filter(function (element) {\n        return element.completed;\n      });\n      const inCompletedTodos = todos.filter(function (element) {\n        return element.completed === false;\n      });\n      const returnTodo = [];\n      returnTodo.push.apply(returnTodo, inCompletedTodos);\n      returnTodo.push.apply(returnTodo, completedTodos);\n      return returnTodo;\n    };\n\n    this.addCheck = id => {\n      console.log(\"alpha\");\n      this.setState((prevState, props) => {\n        let checks = prevState.todos;\n        const todo = checks.find(todo => todo.id === id);\n        todo.completed = !todo.completed;\n        return {\n          todos: checks\n        };\n      });\n    };\n\n    this.state = {\n      todos: JSON.parse(localStorage.getItem('todos')) === null ? [] : JSON.parse(localStorage.getItem('todos')),\n      count: parseInt(localStorage.getItem('count') == null ? 0 : localStorage.getItem('count')),\n      checkList: []\n    };\n    this.deleteTodo = this.deleteTodo.bind(this);\n  }\n\n  addTodo(e) {\n    let inputValue = e;\n    this.setState((prevState, props) => {\n      let todoList = prevState.todos;\n      const newTodo = {\n        id: prevState.count + 1,\n        title: inputValue,\n        completed: false\n      };\n      todoList.push(newTodo);\n      localStorage.setItem('todos', JSON.stringify(todoList));\n      localStorage.setItem('count', (prevState.count + 1).toString());\n      return {\n        //[...prevState.todos, newTodo]\n        todos: todoList,\n        count: prevState.count + 1,\n        checkList: [prevState.checkList, false]\n      };\n    });\n  }\n\n  deleteTodo(id) {\n    this.setState((prevState, props) => {\n      let newTodos = prevState.todos;\n      newTodos.splice(newTodos.indexOf(newTodos.find(todo => todo.id === id)), 1);\n      console.log(\"csc\");\n      localStorage.setItem('todos', JSON.stringify(prevState.todos));\n      localStorage.setItem('count', prevState.count.toString());\n      return {\n        todos: newTodos\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"xyz\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), xyz, React.createElement(TitleField, {\n      addTodo: this.addTodo.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), this.getTodos().map((todo, index) => React.createElement(\"div\", {\n      key: todo.id.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(TextWithCheck, {\n      todo: todo,\n      deleteTodo: () => {\n        this.deleteTodo(todo.id);\n      },\n      isCheck: todo.completed,\n      addCheck: () => this.addCheck(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction xyz() {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"hello\"));\n} //\n// function NumberList(props) {\n//     const numb = props.numb;\n//\n//     const listItems = numb.map((k, n) =>\n//         <li key={k}>\n//             <TextWithCheck children={n}/>\n//         </li>\n//     );\n//\n//     return (\n//         <ul>{listItems}</ul>\n//     );\n// }\n\n\nclass TitleField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearField = () => {\n      console.log('dfghj');\n      this.setState({\n        txt: \"\"\n      });\n    };\n\n    this.state = {\n      txt: ''\n    };\n  }\n\n  update(e) {\n    this.setState({\n      txt: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter the Title for your Todo\",\n      value: this.state.txt,\n      onChange: this.update.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Button, {\n      actionPerform: () => {\n        this.props.addTodo(this.state.txt);\n        this.clearField();\n      },\n      text: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }));\n  }\n\n}\n\nvar TextWithCheck = props => React.createElement(\"div\", {\n  className: \"textWithCheck\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 183\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  className: \"check\",\n  type: \"checkbox\",\n  value: props.isCheck,\n  onChange: props.addCheck,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185\n  },\n  __self: this\n}, props.todo.title), React.createElement(Button, {\n  actionPerform: props.deleteTodo,\n  text: \"delete\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 186\n  },\n  __self: this\n}));\n\nvar Button = props => React.createElement(\"button\", {\n  onClick: props.actionPerform,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 191\n  },\n  __self: this\n}, props.text); // function Button(props) {\n//\n//     return <div className=\"buttonType\">\n//         <button onChange={this.props.val}>\n//             add\n//         </button>\n//     </div>;\n// }\n\n\nvar Header = React.createElement(\"header\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 202\n  },\n  __self: this\n});\nexport default App;","map":{"version":3,"sources":["/home/shushant/Documents/React/my-app/src/App.js"],"names":["React","App","Component","constructor","getTodos","todos","state","completedTodos","filter","element","completed","inCompletedTodos","returnTodo","push","apply","addCheck","id","console","log","setState","prevState","props","checks","todo","find","JSON","parse","localStorage","getItem","count","parseInt","checkList","deleteTodo","bind","addTodo","e","inputValue","todoList","newTodo","title","setItem","stringify","toString","newTodos","splice","indexOf","render","xyz","map","index","TitleField","clearField","txt","update","target","value","TextWithCheck","isCheck","Button","actionPerform","text","Header"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            todos: JSON.parse(localStorage.getItem('todos')) === null ? [] : JSON.parse(localStorage.getItem('todos')),\n            count: parseInt(localStorage.getItem('count') == null ? 0 : localStorage.getItem('count')),\n            checkList: [],\n        };\n        this.deleteTodo = this.deleteTodo.bind(this);\n    }\n\n    getTodos = () => {\n        let todos = this.state.todos;\n        const completedTodos = todos.filter(function (element) {\n            return element.completed;\n        });\n\n        const inCompletedTodos = todos.filter(function (element) {\n            return element.completed === false;\n        });\n\n        const returnTodo = [];\n\n        returnTodo.push.apply(returnTodo, inCompletedTodos);\n\n        returnTodo.push.apply(returnTodo, completedTodos);\n\n\n        return returnTodo;\n    };\n\n    addTodo(e) {\n        let inputValue = e;\n        this.setState((prevState, props) => {\n\n            let todoList = prevState.todos;\n            const newTodo = {\n                id: prevState.count + 1,\n                title: inputValue,\n                completed: false,\n            };\n\n            todoList.push(newTodo);\n\n            localStorage.setItem('todos', JSON.stringify(todoList));\n\n            localStorage.setItem('count', (prevState.count + 1).toString());\n\n            return {\n                //[...prevState.todos, newTodo]\n                todos: todoList,\n                count: prevState.count + 1,\n                checkList: [prevState.checkList, false]\n\n            };\n\n        });\n\n\n    }\n\n    deleteTodo(id) {\n        this.setState((prevState, props) => {\n                let newTodos = prevState.todos;\n\n                newTodos.splice(newTodos.indexOf(newTodos.find(todo => todo.id === id)), 1);\n\n                console.log(\"csc\");\n                localStorage.setItem('todos', JSON.stringify(prevState.todos));\n\n                localStorage.setItem('count', prevState.count.toString());\n                return {todos: newTodos}\n\n            }\n        );\n    }\n\n\n    addCheck = (id) => {\n        console.log(\"alpha\");\n        this.setState((prevState, props) => {\n            let checks = prevState.todos;\n            const todo = checks.find(todo => todo.id === id);\n\n            todo.completed = !todo.completed;\n            return {todos: checks};\n        });\n    };\n\n    render() {\n        return (\n            <div className={\"main-content\"}>\n\n                <xyz/>\n\n                {xyz}\n\n                <TitleField addTodo={this.addTodo.bind(this)}/>\n                {this.getTodos().map((todo, index) =>\n                    <div key={todo.id.toString()}>\n                        <TextWithCheck todo={todo} deleteTodo={() => {\n                            this.deleteTodo(todo.id)\n                        }}\n                                       isCheck={todo.completed}\n\n                                       addCheck={() => this.addCheck(todo.id)}\n\n                        />\n\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\n\nfunction xyz() {\n    return (<>\n        <h1>hello</h1>\n    </>);\n}\n\n//\n// function NumberList(props) {\n//     const numb = props.numb;\n//\n//     const listItems = numb.map((k, n) =>\n//         <li key={k}>\n//             <TextWithCheck children={n}/>\n//         </li>\n//     );\n//\n//     return (\n//         <ul>{listItems}</ul>\n//     );\n// }\n\nclass TitleField extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {txt: ''};\n    }\n\n    update(e) {\n        this.setState({txt: e.target.value})\n    }\n\n    clearField = () => {\n\n        console.log('dfghj');\n\n        this.setState({\n            txt: \"\"\n        });\n    };\n\n    render() {\n        return (<div>\n\n            <input type=\"text\" placeholder=\"Enter the Title for your Todo\" value={this.state.txt}\n                   onChange={this.update.bind(this)}/>\n\n            <Button actionPerform={() => {\n                this.props.addTodo(this.state.txt);\n                this.clearField();\n\n            }} text={\"add\"}/>\n\n        </div>);\n\n    }\n\n}\n\n\nvar TextWithCheck = (props) => <div className=\"textWithCheck\">\n    <input className=\"check\" type=\"checkbox\" value={props.isCheck} onChange={props.addCheck}></input>\n    <h3>{props.todo.title}</h3>\n    <Button actionPerform={props.deleteTodo} text={\"delete\"}/>\n\n</div>\n\n\nvar Button = (props) => <button onClick={props.actionPerform}>{props.text}</button>\n// function Button(props) {\n//\n//     return <div className=\"buttonType\">\n//         <button onChange={this.props.val}>\n//             add\n//         </button>\n//     </div>;\n// }\n\nvar\n    Header = <header>\n\n    </header>\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}